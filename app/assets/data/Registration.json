{
  "address": "0xC39DDba991CF05A7D24505b76d1ec4D4e12EABC2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blanceToJoin",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributorAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "githubUsername",
          "type": "string"
        }
      ],
      "name": "ContributorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "CreatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "IsProjectCreatorRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToGithub",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blanceToJoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorRegistratedTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "githubToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "githubUsername",
          "type": "string"
        }
      ],
      "name": "joinAsContributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinAsOpenSourceProjectCreator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blanceToJoin",
          "type": "uint256"
        }
      ],
      "name": "updateBlanceToJoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa21e2fc5f7135b16b76ff6fde355283fa05d09595f5bea88c8221455dbeed591",
  "receipt": {
    "to": null,
    "from": "0x8906EA0bc4b4e62314417eCdcbe45757112720E8",
    "contractAddress": "0xC39DDba991CF05A7D24505b76d1ec4D4e12EABC2",
    "transactionIndex": 2,
    "gasUsed": "798154",
    "logsBloom": "0x
    "blockHash": "0xec5e17fe85ff6826a71c377287e7b1e80b4f5a43cf56d75f85fe41c827dae805",
    "transactionHash": "0xa21e2fc5f7135b16b76ff6fde355283fa05d09595f5bea88c8221455dbeed591",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 27879963,
        "transactionHash": "0xa21e2fc5f7135b16b76ff6fde355283fa05d09595f5bea88c8221455dbeed591",
        "address": "0xC39DDba991CF05A7D24505b76d1ec4D4e12EABC2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008906ea0bc4b4e62314417ecdcbe45757112720e8"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0xec5e17fe85ff6826a71c377287e7b1e80b4f5a43cf56d75f85fe41c827dae805"
      }
    ],
    "blockNumber": 27879963,
    "cumulativeGasUsed": "1117771",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x50a589729bc7D62C821c95c5EA8aE3C2826E2282",
    100
  ],
  "numDeployments": 1,
  "solcInputHash": "511b76e5ba124c52703870907cbd15a2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blanceToJoin\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"githubUsername\",\"type\":\"string\"}],\"name\":\"ContributorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"CreatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"IsProjectCreatorRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToGithub\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blanceToJoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorRegistratedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"githubToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"githubUsername\",\"type\":\"string\"}],\"name\":\"joinAsContributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinAsOpenSourceProjectCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blanceToJoin\",\"type\":\"uint256\"}],\"name\":\"updateBlanceToJoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"the contract should manage user registration , for creator and contributors\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registration.sol\":\"Registration\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Registration.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// the contract should manage user registration , for creator and contributors\\n\\ncontract Registration is Pausable, Ownable {\\n\\n    mapping (string=>address) public  githubToAddress;\\n    mapping (address=>string) public addressToGithub;\\n    mapping (address=>uint256) public creatorRegistratedTime;\\n    IERC20 daoToken;\\n    uint256 public blanceToJoin;\\n    constructor(address token , uint256 _blanceToJoin)  {\\n        daoToken = IERC20(token);\\n        require(_blanceToJoin>10,\\\"balance must be greater than 10\\\");\\n        blanceToJoin = _blanceToJoin;\\n    }\\n    function updateBlanceToJoin(uint256 _blanceToJoin) public onlyOwner{\\n        require(_blanceToJoin>10,\\\"balance must be greater than 10\\\");\\n        blanceToJoin = _blanceToJoin;\\n    }\\n\\n        // register as contributor\\n\\n    function joinAsContributor(string memory githubUsername) public  whenNotPaused{\\n        require(githubToAddress[githubUsername] == address(0), \\\"github username already registered\\\");\\n        githubToAddress[githubUsername] = msg.sender;\\n        addressToGithub[msg.sender] = githubUsername;\\n        emit ContributorRegistered(msg.sender, githubUsername);\\n    }\\n\\n\\n    // join as open-source-project-creator\\n    // later we need to handle case of creator manipulating the contract by selling the token after joining \\n\\n    function joinAsOpenSourceProjectCreator() public  whenNotPaused{\\n        require(creatorRegistratedTime[msg.sender]!=0, \\\"already registered as open source project creator\\\");\\n      /// make sure creator is qualified to join\\n        require(daoToken.balanceOf(msg.sender) >= blanceToJoin, \\\"not enough balance to join\\\");\\n        creatorRegistratedTime[msg.sender] = block.timestamp;\\n        emit CreatorRegistered(msg.sender);\\n    }\\n\\n function IsProjectCreatorRegistered(address creatorAddress) public view returns(bool){\\n     return creatorRegistratedTime[creatorAddress]!=0;}\\n     \\n    // leave \\n\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    event CreatorRegistered(address indexed creatorAddress);\\n    event ContributorRegistered(address indexed contributorAddress, string indexed githubUsername);\\n     \\n\\n}\\n\\n\",\"keccak256\":\"0xc02d5989d5412b00a69992b202f850c9b7164d7357d8d78f69b1be2502c461c9\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610d88380380610d8883398101604081905261002f91610113565b6000805460ff19169055610042336100ba565b600480546001600160a01b0319166001600160a01b038416179055600a81116100b15760405162461bcd60e51b815260206004820152601f60248201527f62616c616e6365206d7573742062652067726561746572207468616e20313000604482015260640160405180910390fd5b6005555061014d565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000806040838503121561012657600080fd5b82516001600160a01b038116811461013d57600080fd5b6020939093015192949293505050565b610c2c8061015c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c5780638da5cb5b116100665780638da5cb5b146101fc578063a5dc1f3514610212578063d1ab496114610232578063f2fde38b1461023b57600080fd5b8063715018a6146101a057806372a0ca23146101a85780638456cb59146101f457600080fd5b80634837388c116100c85780634837388c1461014c5780635c975abb1461015457806360de77811461015f57806361a399e61461018d57600080fd5b80631a695e5a146100ef5780633f4ba83a146101045780634441e0991461010c575b600080fd5b6101026100fd366004610927565b61024e565b005b6101026103b5565b61013761011a3660046109d8565b6001600160a01b0316600090815260036020526040902054151590565b60405190151581526020015b60405180910390f35b6101026103c7565b60005460ff16610137565b61017f61016d3660046109d8565b60036020526000908152604090205481565b604051908152602001610143565b61010261019b366004610a08565b610564565b6101026105c1565b6101dc6101b6366004610927565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610143565b6101026105d3565b60005461010090046001600160a01b03166101dc565b6102256102203660046109d8565b6105e3565b6040516101439190610a45565b61017f60055481565b6101026102493660046109d8565b61067d565b61025661070d565b60006001600160a01b03166001826040516102719190610a78565b908152604051908190036020019020546001600160a01b0316146103025760405162461bcd60e51b815260206004820152602260248201527f67697468756220757365726e616d6520616c726561647920726567697374657260448201527f656400000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001826040516103139190610a78565b908152604080516020928190038301902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0394909416939093179092553360009081526002909152206103718282610b1d565b50806040516103809190610a78565b6040519081900381209033907f13ee88f0d8cd989788df59eb339f13fe43ba9ade63ece035c6cba34f1bfbe19b90600090a350565b6103bd610760565b6103c56107c0565b565b6103cf61070d565b3360009081526003602052604081205490036104535760405162461bcd60e51b815260206004820152603160248201527f616c72656164792072656769737465726564206173206f70656e20736f75726360448201527f652070726f6a6563742063726561746f7200000000000000000000000000000060648201526084016102f9565b600554600480546040517f70a0823100000000000000000000000000000000000000000000000000000000815233928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa1580156104b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dc9190610bdd565b101561052a5760405162461bcd60e51b815260206004820152601a60248201527f6e6f7420656e6f7567682062616c616e636520746f206a6f696e00000000000060448201526064016102f9565b33600081815260036020526040808220429055517f177b4e655e9aaf45f5db25b396dfba96e0152f6adcf5d9a3e7d07276431d42e79190a2565b61056c610760565b600a81116105bc5760405162461bcd60e51b815260206004820152601f60248201527f62616c616e6365206d7573742062652067726561746572207468616e2031300060448201526064016102f9565b600555565b6105c9610760565b6103c56000610812565b6105db610760565b6103c5610882565b600260205260009081526040902080546105fc90610a94565b80601f016020809104026020016040519081016040528092919081815260200182805461062890610a94565b80156106755780601f1061064a57610100808354040283529160200191610675565b820191906000526020600020905b81548152906001019060200180831161065857829003601f168201915b505050505081565b610685610760565b6001600160a01b0381166107015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102f9565b61070a81610812565b50565b60005460ff16156103c55760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016102f9565b6000546001600160a01b036101009091041633146103c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f9565b6107c86108bf565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b61088a61070d565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586107f53390565b60005460ff166103c55760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016102f9565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561093957600080fd5b813567ffffffffffffffff8082111561095157600080fd5b818401915084601f83011261096557600080fd5b81358181111561097757610977610911565b604051601f8201601f19908116603f0116810190838211818310171561099f5761099f610911565b816040528281528760208487010111156109b857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156109ea57600080fd5b81356001600160a01b0381168114610a0157600080fd5b9392505050565b600060208284031215610a1a57600080fd5b5035919050565b60005b83811015610a3c578181015183820152602001610a24565b50506000910152565b6020815260008251806020840152610a64816040850160208701610a21565b601f01601f19169190910160400192915050565b60008251610a8a818460208701610a21565b9190910192915050565b600181811c90821680610aa857607f821691505b602082108103610ac857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b1857600081815260208120601f850160051c81016020861015610af55750805b601f850160051c820191505b81811015610b1457828155600101610b01565b5050505b505050565b815167ffffffffffffffff811115610b3757610b37610911565b610b4b81610b458454610a94565b84610ace565b602080601f831160018114610b805760008415610b685750858301515b600019600386901b1c1916600185901b178555610b14565b600085815260208120601f198616915b82811015610baf57888601518255948401946001909101908401610b90565b5085821015610bcd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610bef57600080fd5b505191905056fea2646970667358221220254df71dcb31997b807b493f9ef7f0c86bcc67d415a21113cb5b0622cda9b5b564736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c5780638da5cb5b116100665780638da5cb5b146101fc578063a5dc1f3514610212578063d1ab496114610232578063f2fde38b1461023b57600080fd5b8063715018a6146101a057806372a0ca23146101a85780638456cb59146101f457600080fd5b80634837388c116100c85780634837388c1461014c5780635c975abb1461015457806360de77811461015f57806361a399e61461018d57600080fd5b80631a695e5a146100ef5780633f4ba83a146101045780634441e0991461010c575b600080fd5b6101026100fd366004610927565b61024e565b005b6101026103b5565b61013761011a3660046109d8565b6001600160a01b0316600090815260036020526040902054151590565b60405190151581526020015b60405180910390f35b6101026103c7565b60005460ff16610137565b61017f61016d3660046109d8565b60036020526000908152604090205481565b604051908152602001610143565b61010261019b366004610a08565b610564565b6101026105c1565b6101dc6101b6366004610927565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610143565b6101026105d3565b60005461010090046001600160a01b03166101dc565b6102256102203660046109d8565b6105e3565b6040516101439190610a45565b61017f60055481565b6101026102493660046109d8565b61067d565b61025661070d565b60006001600160a01b03166001826040516102719190610a78565b908152604051908190036020019020546001600160a01b0316146103025760405162461bcd60e51b815260206004820152602260248201527f67697468756220757365726e616d6520616c726561647920726567697374657260448201527f656400000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001826040516103139190610a78565b908152604080516020928190038301902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0394909416939093179092553360009081526002909152206103718282610b1d565b50806040516103809190610a78565b6040519081900381209033907f13ee88f0d8cd989788df59eb339f13fe43ba9ade63ece035c6cba34f1bfbe19b90600090a350565b6103bd610760565b6103c56107c0565b565b6103cf61070d565b3360009081526003602052604081205490036104535760405162461bcd60e51b815260206004820152603160248201527f616c72656164792072656769737465726564206173206f70656e20736f75726360448201527f652070726f6a6563742063726561746f7200000000000000000000000000000060648201526084016102f9565b600554600480546040517f70a0823100000000000000000000000000000000000000000000000000000000815233928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa1580156104b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dc9190610bdd565b101561052a5760405162461bcd60e51b815260206004820152601a60248201527f6e6f7420656e6f7567682062616c616e636520746f206a6f696e00000000000060448201526064016102f9565b33600081815260036020526040808220429055517f177b4e655e9aaf45f5db25b396dfba96e0152f6adcf5d9a3e7d07276431d42e79190a2565b61056c610760565b600a81116105bc5760405162461bcd60e51b815260206004820152601f60248201527f62616c616e6365206d7573742062652067726561746572207468616e2031300060448201526064016102f9565b600555565b6105c9610760565b6103c56000610812565b6105db610760565b6103c5610882565b600260205260009081526040902080546105fc90610a94565b80601f016020809104026020016040519081016040528092919081815260200182805461062890610a94565b80156106755780601f1061064a57610100808354040283529160200191610675565b820191906000526020600020905b81548152906001019060200180831161065857829003601f168201915b505050505081565b610685610760565b6001600160a01b0381166107015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102f9565b61070a81610812565b50565b60005460ff16156103c55760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016102f9565b6000546001600160a01b036101009091041633146103c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f9565b6107c86108bf565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b61088a61070d565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586107f53390565b60005460ff166103c55760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016102f9565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561093957600080fd5b813567ffffffffffffffff8082111561095157600080fd5b818401915084601f83011261096557600080fd5b81358181111561097757610977610911565b604051601f8201601f19908116603f0116810190838211818310171561099f5761099f610911565b816040528281528760208487010111156109b857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156109ea57600080fd5b81356001600160a01b0381168114610a0157600080fd5b9392505050565b600060208284031215610a1a57600080fd5b5035919050565b60005b83811015610a3c578181015183820152602001610a24565b50506000910152565b6020815260008251806020840152610a64816040850160208701610a21565b601f01601f19169190910160400192915050565b60008251610a8a818460208701610a21565b9190910192915050565b600181811c90821680610aa857607f821691505b602082108103610ac857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b1857600081815260208120601f850160051c81016020861015610af55750805b601f850160051c820191505b81811015610b1457828155600101610b01565b5050505b505050565b815167ffffffffffffffff811115610b3757610b37610911565b610b4b81610b458454610a94565b84610ace565b602080601f831160018114610b805760008415610b685750858301515b600019600386901b1c1916600185901b178555610b14565b600085815260208120601f198616915b82811015610baf57888601518255948401946001909101908401610b90565b5085821015610bcd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610bef57600080fd5b505191905056fea2646970667358221220254df71dcb31997b807b493f9ef7f0c86bcc67d415a21113cb5b0622cda9b5b564736f6c63430008120033",
  "devdoc": {
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "the contract should manage user registration , for creator and contributors",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 130,
        "contract": "contracts/Registration.sol:Registration",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 7,
        "contract": "contracts/Registration.sol:Registration",
        "label": "_owner",
        "offset": 1,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 341,
        "contract": "contracts/Registration.sol:Registration",
        "label": "githubToAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 345,
        "contract": "contracts/Registration.sol:Registration",
        "label": "addressToGithub",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 349,
        "contract": "contracts/Registration.sol:Registration",
        "label": "creatorRegistratedTime",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 352,
        "contract": "contracts/Registration.sol:Registration",
        "label": "daoToken",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IERC20)298"
      },
      {
        "astId": 354,
        "contract": "contracts/Registration.sol:Registration",
        "label": "blanceToJoin",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)298": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}